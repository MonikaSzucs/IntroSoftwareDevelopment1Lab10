#BlueJ class context
comment0.target=Canada
comment0.text=\r\n\ Class\ Canada\ contains\ the\ provinces\ and\ territories,\ and\ their\ population.\r\n\r\n\ @author\ \ Joe\ Developer\r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=Canada()
comment1.text=\ \r\n\ \ Create\ provinces\ and\ territories\ in\ Canada\r\n
comment2.params=
comment2.target=int\ getTotalPopulation()
comment2.text=\ \r\n\ \ Gets\ the\ total\ population\ of\ Canada\r\n\ \ \r\n\ \ @return\ totalPopulation\ Total\ population\ of\ provinces\ and\ territories\ in\ Canada\r\n
comment3.params=
comment3.target=java.lang.String\ getLowestPopulation()
comment3.text=\r\n\ Finds\ the\ province\ with\ the\ lowest\ population.\r\n\ \r\n\ @return\ \ Name\ of\ the\ province\ or\ territory\ with\ the\ lowest\ population\r\n
comment4.params=province
comment4.target=int\ getPopulation(java.lang.String)
comment4.text=\r\n\ Gets\ the\ population\ of\ a\ specific\ province.\r\n\ \r\n\ @return\ \ Population\ of\ the\ province\ or\ territory\r\n\ @param\ \ \ province\ \ \ \ Name\ of\ the\ province\ or\ territory\r\n
comment5.params=name
comment5.target=boolean\ isProvinceInCanada(java.lang.String)
comment5.text=\ \r\n\ Determines\ if\ the\ province/territory\ is\ in\ Canada.\r\n\ \r\n\ @return\ \ Whether\ there\ is\ a\ province\ or\ territory\ with\ the\ given\ name\r\n\ @name\ \ \ \ Name\ of\ the\ province\ or\ territory\r\n
comment6.params=substring
comment6.target=java.lang.String[]\ getProvincesWhoseNameContains(java.lang.String)
comment6.text=\r\n\ Gets\ all\ province\ names\ that\ contain\ the\ given\ substring.\r\n\ \r\n\ @param\ \ \ substring\ \ \ Substring\ to\ search\ for\ in\ the\ name\ of\ province\ or\ territory\r\n\ @return\ \ Array\ of\ provinces\ or\ territories\ names\ with\ the\ substring\ in\ their\ names\r\n
comment7.params=substring
comment7.target=ProvinceTerritory[]\ getMoreProvincesWhoseNameContains(java.lang.String)
comment7.text=\r\n\ Gets\ all\ provinces\ that\ contain\ the\ given\ substring.\r\n\ \r\n\ @param\ \ \ substring\ \ \ Substring\ to\ search\ for\ in\ the\ name\ of\ province\ or\ territory\r\n\ @return\ \ Array\ of\ provinces\ or\ territories\ with\ the\ substring\ in\ their\ names\r\n
comment8.params=letter
comment8.target=java.lang.String[]\ getProvincesWhoseNameStartsWith(char)
comment8.text=\r\n\ Gets\ all\ provinces\ that\ starts\ with\ the\ given\ letter.\r\n\ \r\n\ @param\ \ \ letter\ \ Letter\ by\ which\ province\ or\ territory\ name\ starts\ with\r\n\ @return\ \ Array\ containing\ the\ provinces\ or\ territories\ whose\ name\ start\ with\ a\ specific\ letter\r\n
numComments=9
